name: CI / CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v1

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version:  '13.10'
    
    - name: Install dependencies
      working-directory: ./nk-hotel-app
      run: npm install

    - name: Run the tests and generate coverage report
      working-directory: ./nk-hotel-app
      run: npm test -- --passWithNoTests
    
    - name: Run build
      working-directory: ./nk-hotel-app
      run: npm build
  

  
  deploy:
    # When application is successfully tested and build has been generated 
    # Then we can start with deployment 
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
    - name: checkout repo
      uses: actions/checkout@v2
      
    - name: Set up nankim
      uses: docker/setup-buildx-action@v1
      # be17a6b1-d758-41c0-9a2d-cbb10736fc00

    - name: Set Github repository name and tag
      run: |
          set +e
          echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
          echo "GITHUB_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      shell: bash

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        file: ../Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nkhotel:latest
    
    - name: Run the image in a container
      uses: addnab/docker-run-action@v3
      with:
        image: ${{ secrets.DOCKER_HUB_USERNAME }}/nkhotel:latest
        run: |
          echo "runing the docker image"
          echo "Testing the nodejs app endpoints"
          echo ${{ steps.docker_build.outputs.disgest }}
      

